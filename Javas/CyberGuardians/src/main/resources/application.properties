server.port=8082
server.servlet.context-path=/cyberguardians
discord.token=MTE5NjYzNTUzNTY3NDk3MDIxNg.Gf9oCc.1BJwyksxvrflVjnoSmaiCZAwFw8lU7aKsJs7ao
openai.chatgtp.model=gpt-3.5-turbo
openai.chatgtp.api.key=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
openai.chatgtp.api.url=https://api.openai.com/v1/chat/completions
openai.chatgtp.max-completions=1
openai.chatgtp.temperature=0
openai.chatgtp.max_tokens=1000
flask.server.url=http://localhost:5000/predict
# Spring JPA \uc124\uc815
# \uc0ac\uc6a9\ud558\ub294 DataBase\uc5d0 \ub9de\ub294 \ubb38\ubc95 \ud074\ub798\uc2a4 \uc9c0\uc815
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

# DDL : Create / Drop
# \uc11c\ubc84\uac00 \uc2dc\uc791\ub420 \ub54c, DDL \ucf54\ub4dc\uac00 \uc5b4\ub5bb\uac8c \uc2e4\ud589\ub420 \uc9c0 \uc9c0\uc815
# create : \ud14c\uc774\ube14 \ud655\uc778 -> \uc788\uc73c\uba74 drop \ud6c4 create
# update : \ud14c\uc774\ube14\uc758 \uceec\ub7fc\uc774 \ubcc0\uacbd\ub420 \ub54c, \uc218\uc815\uc0ac\ud56d \ubc18\uc601
spring.jpa.hibernate.ddl-auto=create

# \uc2e4\ud589\ub41c SQL\ubb38 \ucd9c\ub825
spring.jpa.show-sql=true

# \uc774\ud574\ud560 \uc218 \uc788\ub3c4\ub85d, table\uba85\uc774\ub098 column\uba85\uc744 \ud30c\uc2f1\ud574\uc11c \ucd9c\ub825
spring.jpa.properties.hibernate.format_sql=true